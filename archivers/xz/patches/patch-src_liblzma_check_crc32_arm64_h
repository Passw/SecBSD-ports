Index: src/liblzma/check/crc32_arm64.h
--- src/liblzma/check/crc32_arm64.h.orig
+++ src/liblzma/check/crc32_arm64.h
@@ -29,6 +29,11 @@
 #		include <processthreadsapi.h>
 #	elif defined(__APPLE__) && defined(HAVE_SYSCTLBYNAME)
 #		include <sys/sysctl.h>
+#	elif defined(__SecBSD__)
+#		include <sys/types.h>
+#		include <sys/sysctl.h>
+#		include <machine/cpu.h>
+#		include <machine/armreg.h>
 #	endif
 #endif
 
@@ -106,6 +111,16 @@ is_arch_extension_supported(void)
 		return false;
 
 	return has_crc32;
+
+#elif defined(__SecBSD__)
+	const int isar0_mib[] = { CTL_MACHDEP, CPU_ID_AA64ISAR0 };
+	uint64_t isar0;
+	size_t len = sizeof(isar0);
+
+	if (sysctl(isar0_mib, 2, &isar0, &len, NULL, 0) == -1)
+		return false;
+
+	return ID_AA64ISAR0_CRC32(isar0) >= ID_AA64ISAR0_CRC32_BASE;
 
 #else
 	// If a runtime detection method cannot be found, then this must
