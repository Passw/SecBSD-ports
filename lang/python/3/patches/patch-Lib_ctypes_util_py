allow dlopen() to search for libc rather than parsing ldconfig -r to
decide on a version number.

Index: Lib/ctypes/util.py
--- Lib/ctypes/util.py.orig
+++ Lib/ctypes/util.py
@@ -193,7 +193,7 @@ elif os.name == "posix":
                 return None
             return os.fsdecode(res.group(1))
 
-    if sys.platform.startswith(("freebsd", "openbsd", "dragonfly")):
+    if sys.platform.startswith(("freebsd", "openbsd", "secbsd", "dragonfly")):
 
         def _num_version(libname):
             # "libxyz.so.MAJOR.MINOR" => [ MAJOR, MINOR ]
@@ -207,6 +207,9 @@ elif os.name == "posix":
             return nums or [sys.maxsize]
 
         def find_library(name):
+            if sys.platform.startswith("secbsd") and name == "c":
+                return "libc.so"
+
             ename = re.escape(name)
             expr = r':-l%s\.\S+ => \S*/(lib%s\.\S+)' % (ename, ename)
             expr = os.fsencode(expr)
